{
	"info": {
		"_postman_id": "9e01dae7-9753-4595-a6e0-3189b020743f",
		"name": "Cliente Tests",
		"description": "# Introduction\nLa presente colección realiza peticiones simples que reciben un valor nulo.\n\n# Overview\nPeticiones GET, POST, PUT y DELETE se hacen al servidor.\n\n# Authentication\nEl API será usado para realizar pruebas.\n\n# Error Codes\n404 si el recurso no existe.\n500 si hay un error interno.\n202 si no hay contenido en la respuesta.\n\n# Rate limit\nPor el momento no hay límite de peticiones para los usuarios.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Obtener todos los clientes",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "386ed4b7-0865-437b-a4c6-6bfa696bb4c0",
						"type": "text/javascript",
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"No genera error en el Get All\"] = responseCode.code === 200;",
							"tests[\"clientes count\"] = data.length >= 1;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_restaurante-api/api/clientes",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_restaurante-api",
						"api",
						"clientes"
					]
				},
				"description": "Obtiene la colección de clientes de la aplicación."
			},
			"response": [
				{
					"name": "Default",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{ip}}:{{puerto}}/s2_restaurante/clientes",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "8000",
							"path": [
								"s2_restaurante",
								"clientes"
							]
						}
					},
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Crear un nuevo cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fd580e20-bcc5-470e-b219-e07e03dac75a",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_a\",data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"Peppa\", \n\t\"metodoPago\":\"tarjeta\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_restaurante-api/api/clientes",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_restaurante-api",
						"api",
						"clientes"
					]
				},
				"description": "Crea un nuevo cliente."
			},
			"response": [
				{
					"name": "Default",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{ip}}:{{puerto}}/s2_restaurante/clientes",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "8000",
							"path": [
								"s2_restaurante",
								"clientes"
							]
						}
					},
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Obtener un cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7a328c30-0cbd-45cc-b7db-934b1a9adff5",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_restaurante-api/api/clientes/{{new_id_a}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_restaurante-api",
						"api",
						"clientes",
						"{{new_id_a}}"
					]
				},
				"description": "Consulta un cliente de la aplicación. La petición no tiene cuerpo. Se envía el ID del cliente deseado por la URL de la petición."
			},
			"response": [
				{
					"name": "Default",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{ip}}:{{puerto}}/s2_restaurante/clientes/id",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "8000",
							"path": [
								"s2_restaurante",
								"clientes",
								"id"
							]
						}
					},
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Edita un cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "88e1bafd-b718-4a91-8a3d-47a0a0e544b6",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Put\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"Jefferson\", \n\t\"metodoPago\":\"tarjeta\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_restaurante-api/api/clientes/{{new_id_a}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_restaurante-api",
						"api",
						"clientes",
						"{{new_id_a}}"
					]
				},
				"description": "Actualiza un cliente de la aplicación. La petición debe contener los nuevos datos del cliente que desea modificarse. Se envía el ID del cliente deseado por la URL de la petición."
			},
			"response": [
				{
					"name": "Default",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{ip}}:{{puerto}}/s2_restaurante/clientes/id",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "8000",
							"path": [
								"s2_restaurante",
								"clientes",
								"id"
							]
						}
					},
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Eliminar cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "74f3b705-caa0-4392-af42-9ab2501a5ec8",
						"type": "text/javascript",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_restaurante-api/api/clientes/{{new_id_a2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_restaurante-api",
						"api",
						"clientes",
						"{{new_id_a2}}"
					]
				},
				"description": "Elimina un cliente de la aplicación. La petición no tiene cuerpo. Se envía el ID del cliente que desea eliminarse por la URL de la petición."
			},
			"response": [
				{
					"name": "Default",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{ip}}:{{puerto}}/s2_restaurante/clientes/id",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "8000",
							"path": [
								"s2_restaurante",
								"clientes",
								"id"
							]
						}
					},
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Crear un nuevo cliente 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f71a1c43-c37e-45f7-8ef1-ed017af9caef",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_a2\",data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"Fulanito\", \n\t\"metodoPago\":\"efectivo\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_restaurante-api/api/clientes",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_restaurante-api",
						"api",
						"clientes"
					]
				},
				"description": "Crea un nuevo cliente."
			},
			"response": []
		},
		{
			"name": "Obtener un cliente que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5b1be599-6c70-4a10-a909-c5af33cca8ca",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se deberia obtener un cliente con un id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /clientes/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_restaurante-api/api/clientes/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_restaurante-api",
						"api",
						"clientes",
						"0"
					]
				},
				"description": "Obtiene un cliente que no ha sido creado. "
			},
			"response": []
		},
		{
			"name": "Edita un cliente que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "000fb9da-caf0-478e-98a9-17e5592853f5",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se deberia actualizar un cliente con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /clientes/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"Camilo\", \n\t\"metodoPago\":\"tarjeta\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_restaurante-api/api/clientes/23435",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_restaurante-api",
						"api",
						"clientes",
						"23435"
					]
				}
			},
			"response": []
		},
		{
			"name": "Elimina un cliente que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "50682924-54f2-4c15-bc17-c3bba2323917",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se deberia borrar un cliente con un id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /clientes/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_restaurante-api/api/clientes/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_restaurante-api",
						"api",
						"clientes",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borra el cliente 2",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": ""
				},
				"description": "Elimina el segundo cliente creado. "
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "1e228095-0459-491c-b17d-20607a7e9926",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "91ae0278-8f55-4e0a-9d62-d1db9da474fa",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}